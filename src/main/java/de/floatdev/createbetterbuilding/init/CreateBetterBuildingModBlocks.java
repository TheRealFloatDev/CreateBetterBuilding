/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package de.floatdev.createbetterbuilding.init;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;

import net.minecraft.world.level.block.Block;

import de.floatdev.createbetterbuilding.block.YellowStoneBrickStairsBlock;
import de.floatdev.createbetterbuilding.block.YellowStoneBrickSlabBlock;
import de.floatdev.createbetterbuilding.block.YellowStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.YellowBrickBlock;
import de.floatdev.createbetterbuilding.block.WhiteStoneBrickStairBlock;
import de.floatdev.createbetterbuilding.block.WhiteStoneBrickSlabBlock;
import de.floatdev.createbetterbuilding.block.WhiteStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.WhiteBrickBlock;
import de.floatdev.createbetterbuilding.block.WarpedBarrelBlock;
import de.floatdev.createbetterbuilding.block.SpruceBarrelBlock;
import de.floatdev.createbetterbuilding.block.RedStoneBrickStairsBlock;
import de.floatdev.createbetterbuilding.block.RedStoneBrickSlabBlock;
import de.floatdev.createbetterbuilding.block.RedStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.RedBrickBlock;
import de.floatdev.createbetterbuilding.block.PurpleStoneBrickStairsBlock;
import de.floatdev.createbetterbuilding.block.PurpleStoneBrickSlabBlock;
import de.floatdev.createbetterbuilding.block.PurpleStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.PurpleBrickBlock;
import de.floatdev.createbetterbuilding.block.PinkStoneBrickStairsBlock;
import de.floatdev.createbetterbuilding.block.PinkStoneBrickSlabBlock;
import de.floatdev.createbetterbuilding.block.PinkStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.PinkBrickBlock;
import de.floatdev.createbetterbuilding.block.OrangeStoneBrickStairsBlock;
import de.floatdev.createbetterbuilding.block.OrangeStoneBrickSlabBlock;
import de.floatdev.createbetterbuilding.block.OrangeStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.OrangeBrickBlock;
import de.floatdev.createbetterbuilding.block.OakBarrelBlock;
import de.floatdev.createbetterbuilding.block.MossyYellowStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.MossyWhiteStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.MossyRedStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.MossyPurpleStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.MossyPinkStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.MossyOrangeStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.MossyMagentaStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.MossyLimeStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.MossyLightGrayStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.MossyLightBlueStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.MossyGreenStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.MossyGrayStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.MossyCyanStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.MossyBrownStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.MossyBlueStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.MossyBlackStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.MangroveBarrelBlock;
import de.floatdev.createbetterbuilding.block.MagentaStoneBrickStairsBlock;
import de.floatdev.createbetterbuilding.block.MagentaStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.MagentaBrickBlock;
import de.floatdev.createbetterbuilding.block.MagentaBlock;
import de.floatdev.createbetterbuilding.block.LimeStoneBrickStairsBlock;
import de.floatdev.createbetterbuilding.block.LimeStoneBrickSlabBlock;
import de.floatdev.createbetterbuilding.block.LimeStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.LimeBrickBlock;
import de.floatdev.createbetterbuilding.block.LightGrayStoneBrickStairsBlock;
import de.floatdev.createbetterbuilding.block.LightGrayStoneBrickSlabBlock;
import de.floatdev.createbetterbuilding.block.LightGrayStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.LightGrayBrickBlock;
import de.floatdev.createbetterbuilding.block.LightBlueStoneBrickStairsBlock;
import de.floatdev.createbetterbuilding.block.LightBlueStoneBrickSlabBlock;
import de.floatdev.createbetterbuilding.block.LightBlueStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.LightBlueBrickBlock;
import de.floatdev.createbetterbuilding.block.JungleBarrelBlock;
import de.floatdev.createbetterbuilding.block.HandrailBlock;
import de.floatdev.createbetterbuilding.block.GreenStoneBrickStairsBlock;
import de.floatdev.createbetterbuilding.block.GreenStoneBrickSlabBlock;
import de.floatdev.createbetterbuilding.block.GreenStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.GreenBrickBlock;
import de.floatdev.createbetterbuilding.block.GrayStoneBrickStairsBlock;
import de.floatdev.createbetterbuilding.block.GrayStoneBrickSlabBlock;
import de.floatdev.createbetterbuilding.block.GrayStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.GrayBrickBlock;
import de.floatdev.createbetterbuilding.block.DarkOakBarrelBlock;
import de.floatdev.createbetterbuilding.block.CyanStoneBrickStairsBlock;
import de.floatdev.createbetterbuilding.block.CyanStoneBrickSlabBlock;
import de.floatdev.createbetterbuilding.block.CyanStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.CyanBrickBlock;
import de.floatdev.createbetterbuilding.block.CrimsonBarrelBlock;
import de.floatdev.createbetterbuilding.block.BrownStoneBrickStairsBlock;
import de.floatdev.createbetterbuilding.block.BrownStoneBrickSlabBlock;
import de.floatdev.createbetterbuilding.block.BrownStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.BrownBrickBlock;
import de.floatdev.createbetterbuilding.block.BlueStoneBrickStairsBlock;
import de.floatdev.createbetterbuilding.block.BlueStoneBrickSlabBlock;
import de.floatdev.createbetterbuilding.block.BlueStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.BlueBrickBlock;
import de.floatdev.createbetterbuilding.block.BlackStoneBrickStairsBlock;
import de.floatdev.createbetterbuilding.block.BlackStoneBrickSlabBlock;
import de.floatdev.createbetterbuilding.block.BlackStoneBrickBlock;
import de.floatdev.createbetterbuilding.block.BlackBrickBlock;
import de.floatdev.createbetterbuilding.block.BirchBarrelBlock;
import de.floatdev.createbetterbuilding.block.AcaciaBarrelBlock;
import de.floatdev.createbetterbuilding.CreateBetterBuildingMod;

public class CreateBetterBuildingModBlocks {
	public static final DeferredRegister<Block> REGISTRY = DeferredRegister.create(ForgeRegistries.BLOCKS, CreateBetterBuildingMod.MODID);
	public static final RegistryObject<Block> HANDRAIL = REGISTRY.register("handrail", () -> new HandrailBlock());
	public static final RegistryObject<Block> OAK_BARREL = REGISTRY.register("oak_barrel", () -> new OakBarrelBlock());
	public static final RegistryObject<Block> WHITE_STONE_BRICK = REGISTRY.register("white_stone_brick", () -> new WhiteStoneBrickBlock());
	public static final RegistryObject<Block> LIGHT_GRAY_STONE_BRICK = REGISTRY.register("light_gray_stone_brick", () -> new LightGrayStoneBrickBlock());
	public static final RegistryObject<Block> GRAY_STONE_BRICK = REGISTRY.register("gray_stone_brick", () -> new GrayStoneBrickBlock());
	public static final RegistryObject<Block> BLACK_STONE_BRICK = REGISTRY.register("black_stone_brick", () -> new BlackStoneBrickBlock());
	public static final RegistryObject<Block> BROWN_STONE_BRICK = REGISTRY.register("brown_stone_brick", () -> new BrownStoneBrickBlock());
	public static final RegistryObject<Block> RED_STONE_BRICK = REGISTRY.register("red_stone_brick", () -> new RedStoneBrickBlock());
	public static final RegistryObject<Block> ORANGE_STONE_BRICK = REGISTRY.register("orange_stone_brick", () -> new OrangeStoneBrickBlock());
	public static final RegistryObject<Block> YELLOW_STONE_BRICK = REGISTRY.register("yellow_stone_brick", () -> new YellowStoneBrickBlock());
	public static final RegistryObject<Block> LIME_STONE_BRICK = REGISTRY.register("lime_stone_brick", () -> new LimeStoneBrickBlock());
	public static final RegistryObject<Block> GREEN_STONE_BRICK = REGISTRY.register("green_stone_brick", () -> new GreenStoneBrickBlock());
	public static final RegistryObject<Block> CYAN_STONE_BRICK = REGISTRY.register("cyan_stone_brick", () -> new CyanStoneBrickBlock());
	public static final RegistryObject<Block> LIGHT_BLUE_STONE_BRICK = REGISTRY.register("light_blue_stone_brick", () -> new LightBlueStoneBrickBlock());
	public static final RegistryObject<Block> BLUE_STONE_BRICK = REGISTRY.register("blue_stone_brick", () -> new BlueStoneBrickBlock());
	public static final RegistryObject<Block> PURPLE_STONE_BRICK = REGISTRY.register("purple_stone_brick", () -> new PurpleStoneBrickBlock());
	public static final RegistryObject<Block> MAGENTA_STONE_BRICK = REGISTRY.register("magenta_stone_brick", () -> new MagentaStoneBrickBlock());
	public static final RegistryObject<Block> PINK_STONE_BRICK = REGISTRY.register("pink_stone_brick", () -> new PinkStoneBrickBlock());
	public static final RegistryObject<Block> ACACIA_BARREL = REGISTRY.register("acacia_barrel", () -> new AcaciaBarrelBlock());
	public static final RegistryObject<Block> BIRCH_BARREL = REGISTRY.register("birch_barrel", () -> new BirchBarrelBlock());
	public static final RegistryObject<Block> CRIMSON_BARREL = REGISTRY.register("crimson_barrel", () -> new CrimsonBarrelBlock());
	public static final RegistryObject<Block> DARK_OAK_BARREL = REGISTRY.register("dark_oak_barrel", () -> new DarkOakBarrelBlock());
	public static final RegistryObject<Block> JUNGLE_BARREL = REGISTRY.register("jungle_barrel", () -> new JungleBarrelBlock());
	public static final RegistryObject<Block> MANGROVE_BARREL = REGISTRY.register("mangrove_barrel", () -> new MangroveBarrelBlock());
	public static final RegistryObject<Block> SPRUCE_BARREL = REGISTRY.register("spruce_barrel", () -> new SpruceBarrelBlock());
	public static final RegistryObject<Block> WARPED_BARREL = REGISTRY.register("warped_barrel", () -> new WarpedBarrelBlock());
	public static final RegistryObject<Block> MOSSY_WHITE_STONE_BRICK = REGISTRY.register("mossy_white_stone_brick", () -> new MossyWhiteStoneBrickBlock());
	public static final RegistryObject<Block> MOSSY_LIGHT_GRAY_STONE_BRICK = REGISTRY.register("mossy_light_gray_stone_brick", () -> new MossyLightGrayStoneBrickBlock());
	public static final RegistryObject<Block> MOSSY_GRAY_STONE_BRICK = REGISTRY.register("mossy_gray_stone_brick", () -> new MossyGrayStoneBrickBlock());
	public static final RegistryObject<Block> MOSSY_BLACK_STONE_BRICK = REGISTRY.register("mossy_black_stone_brick", () -> new MossyBlackStoneBrickBlock());
	public static final RegistryObject<Block> MOSSY_BROWN_STONE_BRICK = REGISTRY.register("mossy_brown_stone_brick", () -> new MossyBrownStoneBrickBlock());
	public static final RegistryObject<Block> MOSSY_RED_STONE_BRICK = REGISTRY.register("mossy_red_stone_brick", () -> new MossyRedStoneBrickBlock());
	public static final RegistryObject<Block> MOSSY_ORANGE_STONE_BRICK = REGISTRY.register("mossy_orange_stone_brick", () -> new MossyOrangeStoneBrickBlock());
	public static final RegistryObject<Block> MOSSY_YELLOW_STONE_BRICK = REGISTRY.register("mossy_yellow_stone_brick", () -> new MossyYellowStoneBrickBlock());
	public static final RegistryObject<Block> MOSSY_LIME_STONE_BRICK = REGISTRY.register("mossy_lime_stone_brick", () -> new MossyLimeStoneBrickBlock());
	public static final RegistryObject<Block> MOSSY_GREEN_STONE_BRICK = REGISTRY.register("mossy_green_stone_brick", () -> new MossyGreenStoneBrickBlock());
	public static final RegistryObject<Block> MOSSY_CYAN_STONE_BRICK = REGISTRY.register("mossy_cyan_stone_brick", () -> new MossyCyanStoneBrickBlock());
	public static final RegistryObject<Block> MOSSY_LIGHT_BLUE_STONE_BRICK = REGISTRY.register("mossy_light_blue_stone_brick", () -> new MossyLightBlueStoneBrickBlock());
	public static final RegistryObject<Block> MOSSY_BLUE_STONE_BRICK = REGISTRY.register("mossy_blue_stone_brick", () -> new MossyBlueStoneBrickBlock());
	public static final RegistryObject<Block> MOSSY_PURPLE_STONE_BRICK = REGISTRY.register("mossy_purple_stone_brick", () -> new MossyPurpleStoneBrickBlock());
	public static final RegistryObject<Block> MOSSY_MAGENTA_STONE_BRICK = REGISTRY.register("mossy_magenta_stone_brick", () -> new MossyMagentaStoneBrickBlock());
	public static final RegistryObject<Block> MOSSY_PINK_STONE_BRICK = REGISTRY.register("mossy_pink_stone_brick", () -> new MossyPinkStoneBrickBlock());
	public static final RegistryObject<Block> WHITE_STONE_BRICK_SLAB = REGISTRY.register("white_stone_brick_slab", () -> new WhiteStoneBrickSlabBlock());
	public static final RegistryObject<Block> WHITE_STONE_BRICK_STAIR = REGISTRY.register("white_stone_brick_stair", () -> new WhiteStoneBrickStairBlock());
	public static final RegistryObject<Block> LIGHT_GRAY_STONE_BRICK_SLAB = REGISTRY.register("light_gray_stone_brick_slab", () -> new LightGrayStoneBrickSlabBlock());
	public static final RegistryObject<Block> GRAY_STONE_BRICK_SLAB = REGISTRY.register("gray_stone_brick_slab", () -> new GrayStoneBrickSlabBlock());
	public static final RegistryObject<Block> BLACK_STONE_BRICK_SLAB = REGISTRY.register("black_stone_brick_slab", () -> new BlackStoneBrickSlabBlock());
	public static final RegistryObject<Block> BROWN_STONE_BRICK_SLAB = REGISTRY.register("brown_stone_brick_slab", () -> new BrownStoneBrickSlabBlock());
	public static final RegistryObject<Block> RED_STONE_BRICK_SLAB = REGISTRY.register("red_stone_brick_slab", () -> new RedStoneBrickSlabBlock());
	public static final RegistryObject<Block> ORANGE_STONE_BRICK_SLAB = REGISTRY.register("orange_stone_brick_slab", () -> new OrangeStoneBrickSlabBlock());
	public static final RegistryObject<Block> YELLOW_STONE_BRICK_SLAB = REGISTRY.register("yellow_stone_brick_slab", () -> new YellowStoneBrickSlabBlock());
	public static final RegistryObject<Block> LIME_STONE_BRICK_SLAB = REGISTRY.register("lime_stone_brick_slab", () -> new LimeStoneBrickSlabBlock());
	public static final RegistryObject<Block> GREEN_STONE_BRICK_SLAB = REGISTRY.register("green_stone_brick_slab", () -> new GreenStoneBrickSlabBlock());
	public static final RegistryObject<Block> CYAN_STONE_BRICK_SLAB = REGISTRY.register("cyan_stone_brick_slab", () -> new CyanStoneBrickSlabBlock());
	public static final RegistryObject<Block> LIGHT_BLUE_STONE_BRICK_SLAB = REGISTRY.register("light_blue_stone_brick_slab", () -> new LightBlueStoneBrickSlabBlock());
	public static final RegistryObject<Block> BLUE_STONE_BRICK_SLAB = REGISTRY.register("blue_stone_brick_slab", () -> new BlueStoneBrickSlabBlock());
	public static final RegistryObject<Block> PURPLE_STONE_BRICK_SLAB = REGISTRY.register("purple_stone_brick_slab", () -> new PurpleStoneBrickSlabBlock());
	public static final RegistryObject<Block> MAGENTA = REGISTRY.register("magenta", () -> new MagentaBlock());
	public static final RegistryObject<Block> PINK_STONE_BRICK_SLAB = REGISTRY.register("pink_stone_brick_slab", () -> new PinkStoneBrickSlabBlock());
	public static final RegistryObject<Block> LIGHT_GRAY_STONE_BRICK_STAIRS = REGISTRY.register("light_gray_stone_brick_stairs", () -> new LightGrayStoneBrickStairsBlock());
	public static final RegistryObject<Block> GRAY_STONE_BRICK_STAIRS = REGISTRY.register("gray_stone_brick_stairs", () -> new GrayStoneBrickStairsBlock());
	public static final RegistryObject<Block> BLACK_STONE_BRICK_STAIRS = REGISTRY.register("black_stone_brick_stairs", () -> new BlackStoneBrickStairsBlock());
	public static final RegistryObject<Block> BROWN_STONE_BRICK_STAIRS = REGISTRY.register("brown_stone_brick_stairs", () -> new BrownStoneBrickStairsBlock());
	public static final RegistryObject<Block> RED_STONE_BRICK_STAIRS = REGISTRY.register("red_stone_brick_stairs", () -> new RedStoneBrickStairsBlock());
	public static final RegistryObject<Block> ORANGE_STONE_BRICK_STAIRS = REGISTRY.register("orange_stone_brick_stairs", () -> new OrangeStoneBrickStairsBlock());
	public static final RegistryObject<Block> YELLOW_STONE_BRICK_STAIRS = REGISTRY.register("yellow_stone_brick_stairs", () -> new YellowStoneBrickStairsBlock());
	public static final RegistryObject<Block> LIME_STONE_BRICK_STAIRS = REGISTRY.register("lime_stone_brick_stairs", () -> new LimeStoneBrickStairsBlock());
	public static final RegistryObject<Block> GREEN_STONE_BRICK_STAIRS = REGISTRY.register("green_stone_brick_stairs", () -> new GreenStoneBrickStairsBlock());
	public static final RegistryObject<Block> CYAN_STONE_BRICK_STAIRS = REGISTRY.register("cyan_stone_brick_stairs", () -> new CyanStoneBrickStairsBlock());
	public static final RegistryObject<Block> LIGHT_BLUE_STONE_BRICK_STAIRS = REGISTRY.register("light_blue_stone_brick_stairs", () -> new LightBlueStoneBrickStairsBlock());
	public static final RegistryObject<Block> BLUE_STONE_BRICK_STAIRS = REGISTRY.register("blue_stone_brick_stairs", () -> new BlueStoneBrickStairsBlock());
	public static final RegistryObject<Block> PURPLE_STONE_BRICK_STAIRS = REGISTRY.register("purple_stone_brick_stairs", () -> new PurpleStoneBrickStairsBlock());
	public static final RegistryObject<Block> MAGENTA_STONE_BRICK_STAIRS = REGISTRY.register("magenta_stone_brick_stairs", () -> new MagentaStoneBrickStairsBlock());
	public static final RegistryObject<Block> PINK_STONE_BRICK_STAIRS = REGISTRY.register("pink_stone_brick_stairs", () -> new PinkStoneBrickStairsBlock());
	public static final RegistryObject<Block> WHITE_BRICK = REGISTRY.register("white_brick", () -> new WhiteBrickBlock());
	public static final RegistryObject<Block> LIGHT_GRAY_BRICK = REGISTRY.register("light_gray_brick", () -> new LightGrayBrickBlock());
	public static final RegistryObject<Block> GRAY_BRICK = REGISTRY.register("gray_brick", () -> new GrayBrickBlock());
	public static final RegistryObject<Block> BLACK_BRICK = REGISTRY.register("black_brick", () -> new BlackBrickBlock());
	public static final RegistryObject<Block> BROWN_BRICK = REGISTRY.register("brown_brick", () -> new BrownBrickBlock());
	public static final RegistryObject<Block> RED_BRICK = REGISTRY.register("red_brick", () -> new RedBrickBlock());
	public static final RegistryObject<Block> ORANGE_BRICK = REGISTRY.register("orange_brick", () -> new OrangeBrickBlock());
	public static final RegistryObject<Block> YELLOW_BRICK = REGISTRY.register("yellow_brick", () -> new YellowBrickBlock());
	public static final RegistryObject<Block> LIME_BRICK = REGISTRY.register("lime_brick", () -> new LimeBrickBlock());
	public static final RegistryObject<Block> GREEN_BRICK = REGISTRY.register("green_brick", () -> new GreenBrickBlock());
	public static final RegistryObject<Block> CYAN_BRICK = REGISTRY.register("cyan_brick", () -> new CyanBrickBlock());
	public static final RegistryObject<Block> LIGHT_BLUE_BRICK = REGISTRY.register("light_blue_brick", () -> new LightBlueBrickBlock());
	public static final RegistryObject<Block> BLUE_BRICK = REGISTRY.register("blue_brick", () -> new BlueBrickBlock());
	public static final RegistryObject<Block> PURPLE_BRICK = REGISTRY.register("purple_brick", () -> new PurpleBrickBlock());
	public static final RegistryObject<Block> MAGENTA_BRICK = REGISTRY.register("magenta_brick", () -> new MagentaBrickBlock());
	public static final RegistryObject<Block> PINK_BRICK = REGISTRY.register("pink_brick", () -> new PinkBrickBlock());
	// Start of user code block custom blocks
	// End of user code block custom blocks
}
